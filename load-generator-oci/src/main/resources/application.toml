[oci.client.retry]
foo="bar"

[ssh]
# DO NOT use a valuable key here. It is uploaded to the hyperfoil controller for agent provisioning. If you don't need
# this for debugging, simply leave this property unset, and a fresh generated key pair will be used.
#private-key-location="/home/yawkat/.ssh/id_rsa"

[suite]
# the compartment to run the benchmark suite in. the compartment should be empty; it will be cleared before and after each run.
compartment="ocid1.compartment.oc1..aaaaaaaaqpsmu5vcjf75ejqwvhhg75ndjpjdmxihi2gltvb5zazhv2oe7wea"
region="ap-tokyo-1"
availability-domain="hkYI:AP-TOKYO-1-AD-1"
enabled-run-types=[
    "mn-hotspot",
    #"mn-native",
    "pure-netty-hotspot",
    #"pure-netty-native", broken
    "helidon-nima-hotspot",
    "spring-boot-hotspot",
    "vertx-hotspot",
    #"vertx-native",
]
# independent repetitions of each benchmark
repetitions=8
max-concurrent-runs=25

# configuration for the benchmark load. applies to all frameworks.
[load]
# protocols to test
protocols=[
    "HTTP1",
    #"HTTPS1",
    #"HTTPS2",
]
# different json body sizes to test
[[load.documents]]
string-count=6
string-length=6
#[[load.documents]]
#string-count=1000
#string-length=6
#[[load.documents]]
#string-count=100000
#string-length=6
#[[load.documents]]
#string-count=6
#string-length=1000
#[[load.documents]]
#string-count=6
#string-length=100000

# configuration for the hyperfoil cluster
[hyperfoil]
agent-count=5

warmup-duration="1m"
pgo-duration="2m"
compile-ops=50
shared-connections=24000
session-limit-factor=2
pipelining-limit=1

# different ops/s to try
ops=[
    #5, 10, 15, 25,
    50, 75, 100, 200, 400, 800, 1000, 2000, 4000, 8000, 16000]
# duration per ops/s benchmark
benchmark-duration="2m"

[compute]
debug-authorized-keys=["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIObBGYqEuujvGhBwr1S/y+ungP2B7wFDmaX61Jek+Dli yawkat@yawkat-oracle"]

# configuration for the different compute instances for the benchmark

# core limits in my AD:
# VM.Standard.A1: 80 cores
# VM.Standard.E3.Flex: 150 cores
# VM.Standard.E4.Flex: 150 cores

# instance that the test server runs on
[compute.instance-types.benchmark-server]
shape="VM.Standard.E5.Flex"
ocpus=4
memory-in-gb=16
image="Oracle-Linux-9.2-2023.12.08-0"

# relay server used as an SSH gateway to other servers
[compute.instance-types.relay-server]
shape="VM.Standard.A1.Flex"
ocpus=1
memory-in-gb=2
image="Oracle-Linux-9.2-aarch64-2023.12.08-0"

# hyperfoil controller
[compute.instance-types.hyperfoil-controller]
shape="VM.Standard.A1.Flex"
ocpus=2
memory-in-gb=4
image="Oracle-Linux-9.2-aarch64-2023.12.08-0"

# hyperfoil agent
[compute.instance-types.hyperfoil-agent]
shape="VM.Standard.E4.Flex"
ocpus=10
memory-in-gb=32
image="Oracle-Linux-9.2-2023.12.08-0"

[variants.hotspot]
version=21
common-options="-XX:+UseZGC -Xmx12G -Dio.netty.iouring.iosqeAsyncThreshold=2147483647"
option-choices=[""]

[variants.hotspot.async-profiler]
enabled=false
path="/home/yawkat/bin/async-profiler-2.9-linux-x64/build/libasyncProfiler.so"
args="start,event=cpu,file=flamegraph.html"
outputs=["flamegraph.html"]

[variants.native-image]
# these are native-image options that are benchmarked against each other
option-choices=["--gc=G1"]
# these are framework-specific options that are just required to get the build to work :)
prefix-options.mn="-J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.configure=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED -J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED"

# micronaut variant configuration
[variants.micronaut.compile-variants]
tcnative=[
    "on",
    #"off"
]
transport=[
    "nio",
    #"epoll",
    "iouring"
]
json=[
    "jackson",
    #"serde"
]
micronaut=[
    "4.3",
]
java=["17"]